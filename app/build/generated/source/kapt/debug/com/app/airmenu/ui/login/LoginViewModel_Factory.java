// Generated by Dagger (https://dagger.dev).
package com.app.airmenu.ui.login;

import com.app.airmenu.local.PreferenceRepository;
import com.app.airmenu.remote.RemoteRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LoginViewModel_Factory implements Factory<LoginViewModel> {
  private final Provider<RemoteRepository> repositoryProvider;

  private final Provider<PreferenceRepository> prefRepositoryProvider;

  public LoginViewModel_Factory(Provider<RemoteRepository> repositoryProvider,
      Provider<PreferenceRepository> prefRepositoryProvider) {
    this.repositoryProvider = repositoryProvider;
    this.prefRepositoryProvider = prefRepositoryProvider;
  }

  @Override
  public LoginViewModel get() {
    return newInstance(repositoryProvider.get(), prefRepositoryProvider.get());
  }

  public static LoginViewModel_Factory create(Provider<RemoteRepository> repositoryProvider,
      Provider<PreferenceRepository> prefRepositoryProvider) {
    return new LoginViewModel_Factory(repositoryProvider, prefRepositoryProvider);
  }

  public static LoginViewModel newInstance(RemoteRepository repository,
      PreferenceRepository prefRepository) {
    return new LoginViewModel(repository, prefRepository);
  }
}
