// Generated by Dagger (https://dagger.dev).
package com.app.airmenu.ui.posIds;

import com.app.airmenu.local.PreferenceRepository;
import com.app.airmenu.remote.RemoteRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PosIdsViewModel_Factory implements Factory<PosIdsViewModel> {
  private final Provider<RemoteRepository> remoteRepositoryProvider;

  private final Provider<PreferenceRepository> prefRepositoryProvider;

  public PosIdsViewModel_Factory(Provider<RemoteRepository> remoteRepositoryProvider,
      Provider<PreferenceRepository> prefRepositoryProvider) {
    this.remoteRepositoryProvider = remoteRepositoryProvider;
    this.prefRepositoryProvider = prefRepositoryProvider;
  }

  @Override
  public PosIdsViewModel get() {
    return newInstance(remoteRepositoryProvider.get(), prefRepositoryProvider.get());
  }

  public static PosIdsViewModel_Factory create(Provider<RemoteRepository> remoteRepositoryProvider,
      Provider<PreferenceRepository> prefRepositoryProvider) {
    return new PosIdsViewModel_Factory(remoteRepositoryProvider, prefRepositoryProvider);
  }

  public static PosIdsViewModel newInstance(RemoteRepository remoteRepository,
      PreferenceRepository prefRepository) {
    return new PosIdsViewModel(remoteRepository, prefRepository);
  }
}
