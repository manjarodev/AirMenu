// Generated by Dagger (https://dagger.dev).
package com.app.airmenu.di;

import com.app.airmenu.remote.AirMenuApi;
import com.app.airmenu.remote.RemoteRepository;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class Modules_ProvideRemoteRepositoryFactory implements Factory<RemoteRepository> {
  private final Provider<AirMenuApi> apiServiceProvider;

  public Modules_ProvideRemoteRepositoryFactory(Provider<AirMenuApi> apiServiceProvider) {
    this.apiServiceProvider = apiServiceProvider;
  }

  @Override
  public RemoteRepository get() {
    return provideRemoteRepository(apiServiceProvider.get());
  }

  public static Modules_ProvideRemoteRepositoryFactory create(
      Provider<AirMenuApi> apiServiceProvider) {
    return new Modules_ProvideRemoteRepositoryFactory(apiServiceProvider);
  }

  public static RemoteRepository provideRemoteRepository(AirMenuApi apiService) {
    return Preconditions.checkNotNullFromProvides(Modules.INSTANCE.provideRemoteRepository(apiService));
  }
}
