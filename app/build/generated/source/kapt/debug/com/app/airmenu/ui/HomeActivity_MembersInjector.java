// Generated by Dagger (https://dagger.dev).
package com.app.airmenu.ui;

import com.app.airmenu.local.PreferenceRepository;
import com.app.airmenu.remote.RemoteRepository;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HomeActivity_MembersInjector implements MembersInjector<HomeActivity> {
  private final Provider<RemoteRepository> remoteRepositoryProvider;

  private final Provider<PreferenceRepository> prefRepositoryProvider;

  public HomeActivity_MembersInjector(Provider<RemoteRepository> remoteRepositoryProvider,
      Provider<PreferenceRepository> prefRepositoryProvider) {
    this.remoteRepositoryProvider = remoteRepositoryProvider;
    this.prefRepositoryProvider = prefRepositoryProvider;
  }

  public static MembersInjector<HomeActivity> create(
      Provider<RemoteRepository> remoteRepositoryProvider,
      Provider<PreferenceRepository> prefRepositoryProvider) {
    return new HomeActivity_MembersInjector(remoteRepositoryProvider, prefRepositoryProvider);
  }

  @Override
  public void injectMembers(HomeActivity instance) {
    injectRemoteRepository(instance, remoteRepositoryProvider.get());
    injectPrefRepository(instance, prefRepositoryProvider.get());
  }

  @InjectedFieldSignature("com.app.airmenu.ui.HomeActivity.remoteRepository")
  public static void injectRemoteRepository(HomeActivity instance,
      RemoteRepository remoteRepository) {
    instance.remoteRepository = remoteRepository;
  }

  @InjectedFieldSignature("com.app.airmenu.ui.HomeActivity.prefRepository")
  public static void injectPrefRepository(HomeActivity instance,
      PreferenceRepository prefRepository) {
    instance.prefRepository = prefRepository;
  }
}
